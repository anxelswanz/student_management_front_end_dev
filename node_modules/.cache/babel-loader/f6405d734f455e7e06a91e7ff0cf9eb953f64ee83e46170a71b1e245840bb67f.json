{"ast":null,"code":"var _jsxFileName = \"D:\\\\Student_manage\\\\student_management_front_end_dev\\\\src\\\\component\\\\leftbar\\\\leftbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './leftbar.css';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport logo from '../../assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LeftBar(props) {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(props.tabNav);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    setSelectedIndex(props.tabNav);\n  }, [props.tabNav]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: open ? handleDrawerClose : handleDrawerOpen,\n      children: open ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      className: open ? 'drawerOpen' : 'drawerClose',\n      classes: {\n        paper: open ? 'drawerOpen' : 'drawerClose'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"leftbar\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          className: \"topbox\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"logo\",\n              src: logo,\n              alt: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: \"details\",\n              gutterBottom: true,\n              children: \"Student Name:xxx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: \"details\",\n              gutterBottom: true,\n              children: \"Student ID:xxx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: \"details\",\n              children: \"Year:xxx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          className: \"navbox\",\n          children: ['Programme', 'Modules', 'CourseWork', 'Exam', 'Absence', 'MyTutor', 'MyPrograme'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            component: Link,\n            to: '/' + text,\n            className: selectedIndex === text ? 'sure' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: 'iconfont icon-' + text.toLowerCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), open && text]\n          }, text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(LeftBar, \"epZRipQhXnol0ZOBXTXckurGaY0=\");\n_c = LeftBar;\nexport default LeftBar;\nvar _c;\n$RefreshReg$(_c, \"LeftBar\");","map":{"version":3,"names":["React","useState","useEffect","Link","Drawer","List","ListItem","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","Card","CardContent","Typography","logo","jsxDEV","_jsxDEV","LeftBar","props","_s","open","setOpen","selectedIndex","setSelectedIndex","tabNav","handleDrawerOpen","handleDrawerClose","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","className","classes","paper","id","src","alt","gutterBottom","map","text","index","button","component","to","toLowerCase","_c","$RefreshReg$"],"sources":["D:/Student_manage/student_management_front_end_dev/src/component/leftbar/leftbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './leftbar.css';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../../assets/logo.png';\r\n\r\nfunction LeftBar(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedIndex, setSelectedIndex] = useState(props.tabNav);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedIndex(props.tabNav);\r\n  }, [props.tabNav]);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={open ? handleDrawerClose : handleDrawerOpen}>\r\n        {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n      </IconButton>\r\n      <Drawer variant=\"permanent\" className={open ? 'drawerOpen' : 'drawerClose'} classes={{ paper: open ? 'drawerOpen' : 'drawerClose' }}>\r\n        <div id='leftbar'>\r\n          <Card variant=\"outlined\" className='topbox'>\r\n            <CardContent>\r\n              <img className='logo' src={logo} alt=\"logo\" />\r\n              <Typography className='details' gutterBottom>\r\n                Student Name:xxx\r\n              </Typography>\r\n              <Typography className='details' gutterBottom>\r\n                Student ID:xxx\r\n              </Typography>\r\n              <Typography className='details'>\r\n                Year:xxx\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n          <Divider />\r\n          <List className='navbox'>\r\n            {['Programme', 'Modules', 'CourseWork', 'Exam', 'Absence', 'MyTutor', 'MyPrograme'].map((text, index) => (\r\n              <ListItem button key={text} component={Link} to={'/' + text} className={selectedIndex === text ? 'sure' : ''}>\r\n                <i className={'iconfont icon-' + text.toLowerCase()}></i>{open && text}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeftBar;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}