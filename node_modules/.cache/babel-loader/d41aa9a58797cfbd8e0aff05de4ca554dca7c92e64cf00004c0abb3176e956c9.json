{"ast":null,"code":"var _jsxFileName = \"D:\\\\Student_manage\\\\student_management_front_end_dev\\\\src\\\\component\\\\leftbar\\\\leftbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './leftbar.css';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport logo from '../../assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LeftBar(props) {\n  _s();\n  const [selectedIndex, setSelectedIndex] = useState(props.tabNav);\n  const [isSidebarVisible, setSidebarVisible] = useState(true);\n  const toggleSidebar = () => {\n    setSidebarVisible(!isSidebarVisible);\n  };\n  useEffect(() => {\n    console.log(props.tabNav);\n    setSelectedIndex(props.tabNav);\n  }, [props.tabNav]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"leftbar\",\n    className: isSidebarVisible ? 'expanded' : 'collapsed',\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSidebar,\n      className: `toggle-button ${isSidebarVisible ? 'visible' : 'hidden'}`,\n      children: \"\\u2630\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      className: \"topbox\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"details\",\n          gutterBottom: true,\n          children: \"Student Name:xxx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"details\",\n          gutterBottom: true,\n          children: \"Student ID:xxx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"details\",\n          children: \"Year:xxx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: \"navbox\",\n      children: ['Programme', 'Modules', 'CourseWork', 'Exam', 'Absence', 'MyTutor', 'MyPrograme'].map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          className: selectedIndex === item ? 'sure' : '',\n          to: `/${item}`,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `iconfont icon-${item.toLowerCase()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, item, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(LeftBar, \"fjjnM6Av2CDAeoDWeBAvkrPGDEI=\");\n_c = LeftBar;\nexport default LeftBar;\nvar _c;\n$RefreshReg$(_c, \"LeftBar\");","map":{"version":3,"names":["React","useState","useEffect","Link","Card","CardContent","Typography","Divider","List","ListItem","logo","jsxDEV","_jsxDEV","LeftBar","props","_s","selectedIndex","setSelectedIndex","tabNav","isSidebarVisible","setSidebarVisible","toggleSidebar","console","log","id","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","src","alt","gutterBottom","map","item","Fragment","button","component","to","toLowerCase","_c","$RefreshReg$"],"sources":["D:/Student_manage/student_management_front_end_dev/src/component/leftbar/leftbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './leftbar.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport logo from '../../assets/logo.png';\r\n\r\nfunction LeftBar(props) {\r\n  const [selectedIndex, setSelectedIndex] = useState(props.tabNav);\r\n  const [isSidebarVisible, setSidebarVisible] = useState(true);\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarVisible(!isSidebarVisible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(props.tabNav);\r\n    setSelectedIndex(props.tabNav);\r\n  }, [props.tabNav]);\r\n\r\n  return (\r\n    <div id='leftbar' className={isSidebarVisible ? 'expanded' : 'collapsed'}>\r\n      <button onClick={toggleSidebar} className={`toggle-button ${isSidebarVisible ? 'visible' : 'hidden'}`}>â˜°</button>\r\n      <Card variant=\"outlined\" className='topbox'>\r\n        <CardContent>\r\n          <img className='logo' src={logo} alt=\"logo\" />\r\n          <Typography className='details' gutterBottom>\r\n            Student Name:xxx\r\n          </Typography>\r\n          <Typography className='details' gutterBottom>\r\n            Student ID:xxx\r\n          </Typography>\r\n          <Typography className='details'>\r\n            Year:xxx\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Divider />\r\n      <List className='navbox'>\r\n        {['Programme', 'Modules', 'CourseWork', 'Exam', 'Absence', 'MyTutor', 'MyPrograme'].map((item) => (\r\n          <React.Fragment key={item}>\r\n            <ListItem button component={Link} className={selectedIndex === item ? 'sure' : ''} to={`/${item}`}>\r\n              <i className={`iconfont icon-${item.toLowerCase()}`}></i>\r\n              {item}\r\n            </ListItem>\r\n            <Divider />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeftBar;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}